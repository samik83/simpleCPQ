name: Salesforce Apex Test Runner Workflow
on: push
env:
  ORG_ALIAS: org_alias
jobs:
  salesforce-apex-test-runner-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Check out files
        uses: actions/checkout@v4

      # PREREQUISITES - Only needed if runner doesn't already satisfy these requirements
      - name: Ensure node v20.9.0 or greater
        uses: actions/setup-node@v4
        with:
          node-version: '>=20.9.0'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli@latest

      - name: Install Latest Salesforce Code Analyzer CLI Plugin
        run: sf plugins install code-analyzer@latest

      - name: 'Authorize to the Org'
        run: echo "${{ secrets.ORG_SFDX_URL }}" | sf org login sfdx-url --alias $ORG_ALIAS --set-default --set-default-dev-hub --sfdx-url-stdin
                
        # Creating to Scratch org        
      - name: Create a Scratch Org
        run: sf org create scratch --definition-file config/project-scratch-def.json --set-default --alias CI_Scratch_Org
        working-directory: ./
        # Inserting metadata objects to Scratch org
      - name: Push source to Scratch Org
        run: sf project deploy start --source-dir force-app --target-org CI_Scratch_Org --concise
        working-directory: ./
      # Running tests to make sure nothing is broken 
      - name: Run unit tests
        id: run-apex-tests
        run: |
          sf apex run test --wait 30 --test-level RunAllTestsInOrg --target-org CI_Scratch_Org --code-coverage  --detailed-coverage --output-dir test-results --result-format human --concise
          EXIT_CODE=$?
          echo "::set-output name=exit_code::$EXIT_CODE"
        working-directory: ./
      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test-results
      - name: Delete Scratch Org
        if: always()
        run: sf org delete scratch --target-org CI_Scratch_Org --no-prompt
      
      - name: Check covergae
        run: |
          org_wide_coverage=$(grep 'Org Wide Coverage' ./test-results/test-result.txt | awk '{print $NF}' | sed 's/%//')
          echo "org_wide_coverage fetched from file: $org_wide_coverage"
          if (( $(echo "$org_wide_coverage > 75" | bc -l) )); then
            echo "org_wide_coverage is greater than 75: $org_wide_coverage"
          else
            echo "org_wide_coverage is not greater than 75: $org_wide_coverage"
          exit 1
          fi
        shell: bash
